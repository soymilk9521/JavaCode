package com.arc.learn.objectdemo;

public class ObjectDemo {

	public static void main(String[] args) {
		
		/**
		 * 1. 面向对象思想：
		 * 面向对象（Object Oriented）是一种程序设计方法，或者是一种程序设计规范(paradigm)，
		 * 其基本思想是使用对象、类、继承、封装、多态等基本概念来进行程序设计。
		 * 从现实世界中客观存在的事物（即对象）出发来构造软件系统，
		 * 并且在系统构造中尽可能运用人类的自然思维方式。
		 * 
		 * 举列面向过程和面向对象理解
		 *  把大象装冰箱：
		 *  	面向过程方式：
		 *  		打开冰箱
		 *  		存储大象
		 *  		关闭冰箱
		 *          面向过程思想，强调的是过程（动作）
		 *          常见编程语言C语句
		 *      面向对象方式：
		 *          冰箱打开
		 *          冰箱存储
		 *          冰箱关闭
		 *          面向对象思想，强调的是对象（实体）
		 * 			常见编程语言C++，java，C#
		 *  面向对象特点：
		 *    面向对象是一种常见的思想，符号人们的思考方式。
		 *    面向对象的出现，使复杂问题简单化。
		 *    面向对象的出现，让曾经过程中的执行者变成对象中的指挥者。
		 *    
		 * 
		 * 2. 对象
		 * 对象是系统中用来描述客观事物的一个实体，它是构成系统的一个基本单位。
		 * 一个对象由属性和行为组成。
		 * 
		 * 类的实例化可生成对象，一个对象的生命周期包括三个阶段：创建、使用、消亡。
		 * 当一个对象不在被引用时，该对象成为一个无用对象。
		 * Java的垃圾收集器自动扫描对象的动态内存区，把没有引用的对象作为垃圾收集起来并释放。
		 * 
		 * 3. 类
		 * 类是具有相同属性和方法的一组对象的集合，它为属于该类的所有对象提供了统一的抽象描述，其内部包括属性和行为两个主要部分。
		 * Java中的类实现包括两个部分：类声明和类体。
		 * 	类声明：
		 * 		[public][abstract|final] class className [extends superclassName] [implements interfaceNameList]{……}
		 * 	类体：
		 * 		class className{
		 * 		  //成员变量
    	 *        [public | protected | private ] [static] [final] [transient] [volatile] type variableName;
    	 *        //成员方法
    	 *        [public | protected | private ] [static] [final | abstract] [native] [synchronized] returnType methodName([paramList]) [throws exceptionList]{
         *          statements
    	 *        }
         *      }
         *      
         *      
         *      
         *      
		 */

	}

}
